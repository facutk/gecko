version: '3.8'
volumes:
  go-modules: # Define the volume
services:
  traefik:
    image: traefik:v2.3
    restart: always
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:8080"
    ports:
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=false"

  whoami:
    image: containous/whoami:latest
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.rule=Path(`/whoami`)

  html:
    build:
      context: ./services/hello-html
      dockerfile: Dockerfile.dev
    stdin_open: true
    restart: "no"
    volumes:
      - ./services/hello-html:/usr/src/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.html.rule=PathPrefix(`/`)"
      - "traefik.http.routers.html.service=html"
      - "traefik.http.services.html.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.html.stripprefix.prefixes=/"
      - "traefik.http.middlewares.html.stripprefix.forceslash=false"
      - "traefik.http.routers.html.middlewares=html"
    expose:
      - "3000"
    environment:
      PORT: 8080

  gecko:
    build:
      context: ./services/gecko
      dockerfile: ./Dockerfile.dev
    restart: always
    volumes:
      - ./services/gecko:/app
      - ./services/gecko/data:/data
      - go-modules:/go/pkg/mod # Put modules cache into a separate volume
    depends_on:
      - redis
    expose:
      - "8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gecko.rule=PathPrefix(`/gecko`)"
      - "traefik.http.routers.gecko.service=gecko"
      - "traefik.http.services.gecko.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.gecko.stripprefix.prefixes=/gecko"
      - "traefik.http.middlewares.gecko.stripprefix.forceslash=false"
      - "traefik.http.routers.gecko.middlewares=gecko"
    environment:
      RACE_DETECTOR: 1
      REDIS_HOST: redis
      REDIS_PORT: 6379
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      LITESTREAM_BUCKET: ${LITESTREAM_BUCKET}
      LITESTREAM_PATH: ${LITESTREAM_PATH_GECKO}
      DB_PATH: ${DB_PATH_GECKO}

  auth:
    build:
      context: ./services/auth
      dockerfile: ./Dockerfile.dev
    restart: always
    volumes:
      - ./services/auth:/app
      - ./services/auth/data:/data
      - go-modules:/go/pkg/mod # Put modules cache into a separate volume
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=PathPrefix(`/auth`)"
      - "traefik.http.routers.auth.service=auth"
      - "traefik.http.services.auth.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.auth.stripprefix.prefixes=/auth"
      - "traefik.http.middlewares.auth.stripprefix.forceslash=false"
      - "traefik.http.routers.auth.middlewares=auth"
    expose:
      - "8080"
    environment:
      LITESTREAM_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      LITESTREAM_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      LITESTREAM_BUCKET: ${LITESTREAM_BUCKET}
      LITESTREAM_PATH: ${LITESTREAM_PATH_AUTH}
      DB_PATH: ${DB_PATH_AUTH}

  redis:
    image: redis
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - .:/data
